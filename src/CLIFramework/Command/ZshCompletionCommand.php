<?php
/*
 * This file is part of the CLIFramework package.
 *
 * (c) Yo-An Lin <cornelius.howl@gmail.com>
 *
 * For the full copyright and license information, please view the LICENSE
 * file that was distributed with this source code.
 *
 */
namespace CLIFramework\Command;

use CLIFramework\Command;
use CLIFramework\CommandInterface;
use CLIFramework\Zsh;

class ZshCompletionCommand extends Command
    implements CommandInterface
{

    public function brief() { return 'This function generate a zsh-completion script automatically'; }

    public function execute($as = null) {
        global $argv;

        if ($as) {
            $programName = $as;
        } else {
            $programName = $argv[0];
        }

        $compName = "_" . preg_replace('#\W+#','_',$programName);

        /* for debug
            $programName = 'foo';
            $compName = '_foo';
         */

        // var_dump( $argv ); 
        $code = "";
        $code .= "# $programName zsh completion script generated by CLIFramework\n";
        $code .= "# Web: http://github.com/c9s/php-CLIFramework\n";
        $code .= "# THIS IS AN AUTO-GENERATED FILE, PLEASE DON'T MODIFY THIS FILE DIRECTLY.\n";

        $app = $this->getApplication();
        $comp = Zsh::complete_with_subcommands($programName, $app);

        // $code .= Zsh::command_complete_function($app, null, $compName);

        $code .=<<<HEREDOC
{$compName}() {
  local curcontext=\$curcontext state line
  typeset -A opt_args
  local ret=1
  $comp
  return ret
}

HEREDOC;
        $code .= "compdef $compName $programName\n";




        echo $code;
    }




}
